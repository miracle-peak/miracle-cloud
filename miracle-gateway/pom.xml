<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>pers.miracle.miraclecloud</groupId>
        <artifactId>miracle-cloud</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <groupId>pers.miracle.miraclecloud.gateway</groupId>
    <artifactId>miracle-gateway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>miracle-gateway</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <!--因为gateway用的是webflex，会和web包中有冲突-->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <version>2.2.0.RELEASE</version>
        </dependency>-->

        <!-- gateway 中自带webflex，会和web包冲突-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
            <version>2.2.0.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>pers.miracle.miraclecloud</groupId>
            <artifactId>miracle-config</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <!-- nacos-client1.0.0版本有bug:nacos-discovery失败,故将版本降低到0.9.x -->
       <!-- <dependency>
            <groupId>com.alibaba.nacos</groupId>
            <artifactId>nacos-client</artifactId>
            <version>0.9.1</version>
        </dependency>-->

        <!-- 在2.x版本中，默认是使用lettuce；1.x版本的时候，默认使用的就是Jedis；
            Jedis和Lettuce都是Redis Client
            Jedis 是直连模式，在多个线程间共享一个 Jedis 实例时是线程不安全的。
            如果想要在多线程环境下使用 Jedis，需要使用连接池。
            每个线程都去拿Jedis 实例，当连接数量增多时，物理连接成本就较高了。
            Lettuce 是基于 netty 的，netty 是一个多线程、事件驱动的 I/O 框架，
            连接实例可以在多个线程间共享，通过异步的方式可以让我们更好的利用系统资源，
            而不用浪费线程等待网络或磁盘I/O。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- 报错-ClassNotFoundException: org.apache.commons.pool2.impl.GenericObjectPoolConfig
            加上redis.clients 或者 commons-pool2 依赖
        -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
